# Functions
function parse_git_dirty() {
        [[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo "*"
}
function parse_git_branch() {
        git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}
function get_git_branch() {
	echo `git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
}

# Calculator!
function calc {
    echo "$@" | bc -l
}

# Transfer .sh
transfer() { 
    # check arguments
    if [ $# -eq 0 ]; 
    then 
        echo "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"
        return 1
    fi

    # get temporarily filename, output is written to this file show progress can be showed
    tmpfile=$( mktemp -t transferXXX )
    
    # upload stdin or file
    file=$1

    if tty -s; 
    then 
        basefile=$(basename "$file" | sed -e 's/[^a-zA-Z0-9._-]/-/g') 

        if [ ! -e $file ];
        then
            echo "File $file doesn't exists."
            return 1
        fi
        
        if [ -d $file ];
        then
            # zip directory and transfer
            zipfile=$( mktemp -t transferXXX.zip )
            cd $(dirname $file) && zip -r -q - $(basename $file) >> $zipfile
            curl --progress-bar --upload-file "$zipfile" "https://transfer.sh/$basefile.zip" >> $tmpfile
            rm -f $zipfile
        else
            # transfer file
            curl --progress-bar --upload-file "$file" "https://transfer.sh/$basefile" >> $tmpfile
        fi
    else 
        # transfer pipe
        curl --progress-bar --upload-file "-" "https://transfer.sh/$file" >> $tmpfile
    fi
   
    # cat output link
    cat $tmpfile

    # cleanup
    rm -f $tmpfile
}

# Easy git cloning (i.e. 'clone jblaak/.dotfiles' OR 'cd jblaak && clone .dotfiles')
function clone() {
  arg=$1
  first=${arg%/*}
  second=${arg#*/}

  if [[ "$first" = "$second" ]]; then
    owner="${PWD##*/}"
    echo "Cloning $owner/$second"
    git clone git@github.com:$owner/$second.git
  else
    echo "Cloning $1"
    git clone git@github.com:$1.git
  fi
}
# Recursively remove files
function rmf() {
  find . -type f -name "$1" -exec rm -v {} \;
}

# Battery status
alias battery='upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep -E "state|time\ to\ full|percentage|time\ to\ empty"'

# npm
alias npmr='npm run-script'

# Gradle
alias gw='./gradlew'

# Git (not so serious)
alias gp='git push origin `get_git_branch`'
alias gl='git pull origin `get_git_branch`'
alias gb='git branch'
alias gu='git reset'
alias gpp='git remote prune origin'

# Open Github
function github() {
   local remote=$(git config --get remote.origin.url)
   local tmp=${remote#*:}
   local repo=${tmp%.*}
   $(google-chrome http://www.github.com/$repo >> /dev/null) 
}

# Serve PHP files the simple way
alias serve='php -S localhost:8090 -t ./'

# Gcutil
function gcutil_ssh() {
	gcloud compute --project=$1 ssh $2
}
alias gssh=gcutil_ssh

# Artisan
alias art='php artisan --env=local'
alias gm='php artisan --env=local generate:migration'
alias artt='php artisan --env=testing'
alias ams='php artisan migrate:refresh --seed'

# PHPUnit testing
alias phpunit='./vendor/bin/phpunit'

# Behat/selenium testing
alias behat='vendor/bin/behat'
alias servebehat='php artisan serve --host=behat.localhost'
alias rb='php artisan --env=testing migrate && php artisan --env=testing db:seed && grunt && vendor/bin/behat --verbose --stop-on-failure'
alias sb='php artisan serve --host=behat.localhost'
alias selenium='xvfb-run --server-args="-screen 0, 1920x1080x24" java -jar ~/Tools/selenium-server-standalone-2.47.1.jar'

# Package managers
alias ci='composer install'
alias cif='composer install --ignore-platform-reqs'
alias cu='composer update'
alias cda='composer dump-autoload'

# Node module shortcuts
alias gr='grunt'
alias glp='./node_modules/.bin/gulp'
alias gulp='./node_modules/.bin/gulp'

# Nload defaults to 1992 speeds
alias nload='nload -i 100000'

# Heroku
alias hlog='heroku logs --tail'

# Some locations
alias ..='cd ..'
alias home='cd ~'
alias h='cd ~'
alias dev='cd ~/Development'
alias downloads='cd ~/Downloads'
alias down='cd ~/Downloads'

# Just handy
alias la='ls -la'
alias c='clear'

# Tar
alias untar='tar -zxvf'

# Apt-get
alias uninstall='sudo apt-get remove'
alias install='sudo apt-get install'

# setting the default editor to Sublime
export EDITOR='vim'

# When PHPStorm loses keyboard input
alias doenormaal='ibus restart'

# Create ssh-tunnel to Mysql in VM
alias tunnelvm='ssh -N -p 2222 root@127.0.0.1 -L 33306:localhost:3306'


